@using Microsoft.AspNetCore.Identity
@using MedicReach.Data.Models
@using MedicReach.Services.Physicians

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IPhysicianService Physicians

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = User.GetId();
        var userIsPhysician = Physicians.IsPhysician(userId);
        var userIsAdmin = User.IsAdmin();

        @if (!userIsPhysician && !userIsAdmin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Physicians" asp-action="Become">Become Physician</a>
            </li>
        }
        else if(!userIsAdmin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Physicians" asp-action="Edit">Edit</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

